********************mips********************
----------------------------------------------------------------------
0:	27bdfff0
4:	afbe000c
8:	03a0f025
c:	afc00000
10:	afc00004
14:	1000000a
18:	00000000
1c:	8fc30000
20:	8fc20004
24:	00000000
28:	00621021
2c:	afc20000
30:	8fc20004
34:	00000000
38:	24420001
3c:	afc20004
40:	8fc20004
44:	00000000
48:	2842000a
4c:	1440fff3
50:	00000000
54:	8fc20000
58:	03c0e825
5c:	8fbe000c
60:	27bd0010
64:	03e00008
68:	00000000
6c:	00000000
----------------------------------------------------------------------

****************single cycle****************
----------------------------------------------------------------------
Cycle: 1
[Fetch]   0: 27bdfff0
[Decode]  opcode(09) rs: 1d rt: 1d immediate: fff0
[Execute] R[29]: 00fffff0 = R[29] + fffffff0
----------------------------------------------------------------------
Cycle: 2
[Fetch]   4: afbe000c
[Decode]  opcode(2b) rs: 1d rt: 1e immediate: c
[Execute] M[R[29] + 0000000c]: 00000000 = R[30]
----------------------------------------------------------------------
Cycle: 3
[Fetch]   8: 03a0f025
[Decode]  opcode(00) rs: 1d rt: 1e rd: 0 shamt: 0 funct(25)
[Execute] R[30]: 00fffff0 = R[29] | R[0]
----------------------------------------------------------------------
Cycle: 4
[Fetch]   c: afc00000
[Decode]  opcode(2b) rs: 1e rt: 0 immediate: 0
[Execute] M[R[30] + 00000000]: 00000000 = R[0]
----------------------------------------------------------------------
Cycle: 5
[Fetch]   10: afc00004
[Decode]  opcode(2b) rs: 1e rt: 0 immediate: 4
[Execute] M[R[30] + 00000004]: 00000000 = R[0]
----------------------------------------------------------------------
Cycle: 6
[Fetch]   14: 1000000a
[Decode]  opcode(04) rs: 0 rt: 0 immediate: a
[Execute] Jump to  00000040 = R[0] == R[0]
----------------------------------------------------------------------
Cycle: 7
[Fetch]   40: 8fc20004
[Decode]  opcode(23) rs: 1e rt: 2 immediate: 4
[Execute] R[2]: 00000000 = M[R[30] + 00000004]
----------------------------------------------------------------------
Cycle: 8
[Fetch]   44: 00000000
[Decode]  opcode(00) rs: 0 rt: 0 rd: 0 shamt: 0 funct(0)
[Execute] R[0]: 00000000 = R[0] << R[0]
----------------------------------------------------------------------
Cycle: 9
[Fetch]   48: 2842000a
[Decode]  opcode(0a) rs: 2 rt: 2 immediate: a
[Execute] R[2]: 1 = (R[2] < 0000000a)? 1 : 0
----------------------------------------------------------------------
Cycle: 10
[Fetch]   4c: 1440fff3
[Decode]  opcode(05) rs: 2 rt: 0 immediate: fff3
[Execute] Branch not equal X = R[2] == R[0]
----------------------------------------------------------------------
Cycle: 11
[Fetch]   1c: 8fc30000
[Decode]  opcode(23) rs: 1e rt: 3 immediate: 0
[Execute] R[3]: 00000000 = M[R[30] + 00000000]
----------------------------------------------------------------------
Cycle: 12
[Fetch]   20: 8fc20004
[Decode]  opcode(23) rs: 1e rt: 2 immediate: 4
[Execute] R[2]: 00000000 = M[R[30] + 00000004]
----------------------------------------------------------------------
Cycle: 13
[Fetch]   24: 00000000
[Decode]  opcode(00) rs: 0 rt: 0 rd: 0 shamt: 0 funct(0)
[Execute] R[0]: 00000000 = R[0] << R[0]
----------------------------------------------------------------------
Cycle: 14
[Fetch]   28: 00621021
[Decode]  opcode(00) rs: 3 rt: 2 rd: 2 shamt: 0 funct(21)
[Execute] R[2]: 00000000 = R[3] + R[2]
----------------------------------------------------------------------
Cycle: 15
[Fetch]   2c: afc20000
[Decode]  opcode(2b) rs: 1e rt: 2 immediate: 0
[Execute] M[R[30] + 00000000]: 00000000 = R[2]
----------------------------------------------------------------------
Cycle: 16
[Fetch]   30: 8fc20004
[Decode]  opcode(23) rs: 1e rt: 2 immediate: 4
[Execute] R[2]: 00000000 = M[R[30] + 00000004]
----------------------------------------------------------------------
Cycle: 17
[Fetch]   34: 00000000
[Decode]  opcode(00) rs: 0 rt: 0 rd: 0 shamt: 0 funct(0)
[Execute] R[0]: 00000000 = R[0] << R[0]
----------------------------------------------------------------------
Cycle: 18
[Fetch]   38: 24420001
[Decode]  opcode(09) rs: 2 rt: 2 immediate: 1
[Execute] R[2]: 00000001 = R[2] + 00000001
----------------------------------------------------------------------
Cycle: 19
[Fetch]   3c: afc20004
[Decode]  opcode(2b) rs: 1e rt: 2 immediate: 4
[Execute] M[R[30] + 00000004]: 00000001 = R[2]
----------------------------------------------------------------------
Cycle: 20
[Fetch]   40: 8fc20004
[Decode]  opcode(23) rs: 1e rt: 2 immediate: 4
[Execute] R[2]: 00000001 = M[R[30] + 00000004]
----------------------------------------------------------------------
Cycle: 21
[Fetch]   44: 00000000
[Decode]  opcode(00) rs: 0 rt: 0 rd: 0 shamt: 0 funct(0)
[Execute] R[0]: 00000000 = R[0] << R[0]
----------------------------------------------------------------------
Cycle: 22
[Fetch]   48: 2842000a
[Decode]  opcode(0a) rs: 2 rt: 2 immediate: a
[Execute] R[2]: 1 = (R[2] < 0000000a)? 1 : 0
----------------------------------------------------------------------
Cycle: 23
[Fetch]   4c: 1440fff3
[Decode]  opcode(05) rs: 2 rt: 0 immediate: fff3
[Execute] Branch not equal X = R[2] == R[0]
----------------------------------------------------------------------
Cycle: 24
[Fetch]   1c: 8fc30000
[Decode]  opcode(23) rs: 1e rt: 3 immediate: 0
[Execute] R[3]: 00000000 = M[R[30] + 00000000]
----------------------------------------------------------------------
Cycle: 25
[Fetch]   20: 8fc20004
[Decode]  opcode(23) rs: 1e rt: 2 immediate: 4
[Execute] R[2]: 00000001 = M[R[30] + 00000004]
----------------------------------------------------------------------
Cycle: 26
[Fetch]   24: 00000000
[Decode]  opcode(00) rs: 0 rt: 0 rd: 0 shamt: 0 funct(0)
[Execute] R[0]: 00000000 = R[0] << R[0]
----------------------------------------------------------------------
Cycle: 27
[Fetch]   28: 00621021
[Decode]  opcode(00) rs: 3 rt: 2 rd: 2 shamt: 0 funct(21)
[Execute] R[2]: 00000001 = R[3] + R[2]
----------------------------------------------------------------------
Cycle: 28
[Fetch]   2c: afc20000
[Decode]  opcode(2b) rs: 1e rt: 2 immediate: 0
[Execute] M[R[30] + 00000000]: 00000001 = R[2]
----------------------------------------------------------------------
Cycle: 29
[Fetch]   30: 8fc20004
[Decode]  opcode(23) rs: 1e rt: 2 immediate: 4
[Execute] R[2]: 00000001 = M[R[30] + 00000004]
----------------------------------------------------------------------
Cycle: 30
[Fetch]   34: 00000000
[Decode]  opcode(00) rs: 0 rt: 0 rd: 0 shamt: 0 funct(0)
[Execute] R[0]: 00000000 = R[0] << R[0]
----------------------------------------------------------------------
Cycle: 31
[Fetch]   38: 24420001
[Decode]  opcode(09) rs: 2 rt: 2 immediate: 1
[Execute] R[2]: 00000002 = R[2] + 00000001
----------------------------------------------------------------------
Cycle: 32
[Fetch]   3c: afc20004
[Decode]  opcode(2b) rs: 1e rt: 2 immediate: 4
[Execute] M[R[30] + 00000004]: 00000002 = R[2]
----------------------------------------------------------------------
Cycle: 33
[Fetch]   40: 8fc20004
[Decode]  opcode(23) rs: 1e rt: 2 immediate: 4
[Execute] R[2]: 00000002 = M[R[30] + 00000004]
----------------------------------------------------------------------
Cycle: 34
[Fetch]   44: 00000000
[Decode]  opcode(00) rs: 0 rt: 0 rd: 0 shamt: 0 funct(0)
[Execute] R[0]: 00000000 = R[0] << R[0]
----------------------------------------------------------------------
Cycle: 35
[Fetch]   48: 2842000a
[Decode]  opcode(0a) rs: 2 rt: 2 immediate: a
[Execute] R[2]: 1 = (R[2] < 0000000a)? 1 : 0
----------------------------------------------------------------------
Cycle: 36
[Fetch]   4c: 1440fff3
[Decode]  opcode(05) rs: 2 rt: 0 immediate: fff3
[Execute] Branch not equal X = R[2] == R[0]
----------------------------------------------------------------------
Cycle: 37
[Fetch]   1c: 8fc30000
[Decode]  opcode(23) rs: 1e rt: 3 immediate: 0
[Execute] R[3]: 00000001 = M[R[30] + 00000000]
----------------------------------------------------------------------
Cycle: 38
[Fetch]   20: 8fc20004
[Decode]  opcode(23) rs: 1e rt: 2 immediate: 4
[Execute] R[2]: 00000002 = M[R[30] + 00000004]
----------------------------------------------------------------------
Cycle: 39
[Fetch]   24: 00000000
[Decode]  opcode(00) rs: 0 rt: 0 rd: 0 shamt: 0 funct(0)
[Execute] R[0]: 00000000 = R[0] << R[0]
----------------------------------------------------------------------
Cycle: 40
[Fetch]   28: 00621021
[Decode]  opcode(00) rs: 3 rt: 2 rd: 2 shamt: 0 funct(21)
[Execute] R[2]: 00000003 = R[3] + R[2]
----------------------------------------------------------------------
Cycle: 41
[Fetch]   2c: afc20000
[Decode]  opcode(2b) rs: 1e rt: 2 immediate: 0
[Execute] M[R[30] + 00000000]: 00000003 = R[2]
----------------------------------------------------------------------
Cycle: 42
[Fetch]   30: 8fc20004
[Decode]  opcode(23) rs: 1e rt: 2 immediate: 4
[Execute] R[2]: 00000002 = M[R[30] + 00000004]
----------------------------------------------------------------------
Cycle: 43
[Fetch]   34: 00000000
[Decode]  opcode(00) rs: 0 rt: 0 rd: 0 shamt: 0 funct(0)
[Execute] R[0]: 00000000 = R[0] << R[0]
----------------------------------------------------------------------
Cycle: 44
[Fetch]   38: 24420001
[Decode]  opcode(09) rs: 2 rt: 2 immediate: 1
[Execute] R[2]: 00000003 = R[2] + 00000001
----------------------------------------------------------------------
Cycle: 45
[Fetch]   3c: afc20004
[Decode]  opcode(2b) rs: 1e rt: 2 immediate: 4
[Execute] M[R[30] + 00000004]: 00000003 = R[2]
----------------------------------------------------------------------
Cycle: 46
[Fetch]   40: 8fc20004
[Decode]  opcode(23) rs: 1e rt: 2 immediate: 4
[Execute] R[2]: 00000003 = M[R[30] + 00000004]
----------------------------------------------------------------------
Cycle: 47
[Fetch]   44: 00000000
[Decode]  opcode(00) rs: 0 rt: 0 rd: 0 shamt: 0 funct(0)
[Execute] R[0]: 00000000 = R[0] << R[0]
----------------------------------------------------------------------
Cycle: 48
[Fetch]   48: 2842000a
[Decode]  opcode(0a) rs: 2 rt: 2 immediate: a
[Execute] R[2]: 1 = (R[2] < 0000000a)? 1 : 0
----------------------------------------------------------------------
Cycle: 49
[Fetch]   4c: 1440fff3
[Decode]  opcode(05) rs: 2 rt: 0 immediate: fff3
[Execute] Branch not equal X = R[2] == R[0]
----------------------------------------------------------------------
Cycle: 50
[Fetch]   1c: 8fc30000
[Decode]  opcode(23) rs: 1e rt: 3 immediate: 0
[Execute] R[3]: 00000003 = M[R[30] + 00000000]
----------------------------------------------------------------------
Cycle: 51
[Fetch]   20: 8fc20004
[Decode]  opcode(23) rs: 1e rt: 2 immediate: 4
[Execute] R[2]: 00000003 = M[R[30] + 00000004]
----------------------------------------------------------------------
Cycle: 52
[Fetch]   24: 00000000
[Decode]  opcode(00) rs: 0 rt: 0 rd: 0 shamt: 0 funct(0)
[Execute] R[0]: 00000000 = R[0] << R[0]
----------------------------------------------------------------------
Cycle: 53
[Fetch]   28: 00621021
[Decode]  opcode(00) rs: 3 rt: 2 rd: 2 shamt: 0 funct(21)
[Execute] R[2]: 00000006 = R[3] + R[2]
----------------------------------------------------------------------
Cycle: 54
[Fetch]   2c: afc20000
[Decode]  opcode(2b) rs: 1e rt: 2 immediate: 0
[Execute] M[R[30] + 00000000]: 00000006 = R[2]
----------------------------------------------------------------------
Cycle: 55
[Fetch]   30: 8fc20004
[Decode]  opcode(23) rs: 1e rt: 2 immediate: 4
[Execute] R[2]: 00000003 = M[R[30] + 00000004]
----------------------------------------------------------------------
Cycle: 56
[Fetch]   34: 00000000
[Decode]  opcode(00) rs: 0 rt: 0 rd: 0 shamt: 0 funct(0)
[Execute] R[0]: 00000000 = R[0] << R[0]
----------------------------------------------------------------------
Cycle: 57
[Fetch]   38: 24420001
[Decode]  opcode(09) rs: 2 rt: 2 immediate: 1
[Execute] R[2]: 00000004 = R[2] + 00000001
----------------------------------------------------------------------
Cycle: 58
[Fetch]   3c: afc20004
[Decode]  opcode(2b) rs: 1e rt: 2 immediate: 4
[Execute] M[R[30] + 00000004]: 00000004 = R[2]
----------------------------------------------------------------------
Cycle: 59
[Fetch]   40: 8fc20004
[Decode]  opcode(23) rs: 1e rt: 2 immediate: 4
[Execute] R[2]: 00000004 = M[R[30] + 00000004]
----------------------------------------------------------------------
Cycle: 60
[Fetch]   44: 00000000
[Decode]  opcode(00) rs: 0 rt: 0 rd: 0 shamt: 0 funct(0)
[Execute] R[0]: 00000000 = R[0] << R[0]
----------------------------------------------------------------------
Cycle: 61
[Fetch]   48: 2842000a
[Decode]  opcode(0a) rs: 2 rt: 2 immediate: a
[Execute] R[2]: 1 = (R[2] < 0000000a)? 1 : 0
----------------------------------------------------------------------
Cycle: 62
[Fetch]   4c: 1440fff3
[Decode]  opcode(05) rs: 2 rt: 0 immediate: fff3
[Execute] Branch not equal X = R[2] == R[0]
----------------------------------------------------------------------
Cycle: 63
[Fetch]   1c: 8fc30000
[Decode]  opcode(23) rs: 1e rt: 3 immediate: 0
[Execute] R[3]: 00000006 = M[R[30] + 00000000]
----------------------------------------------------------------------
Cycle: 64
[Fetch]   20: 8fc20004
[Decode]  opcode(23) rs: 1e rt: 2 immediate: 4
[Execute] R[2]: 00000004 = M[R[30] + 00000004]
----------------------------------------------------------------------
Cycle: 65
[Fetch]   24: 00000000
[Decode]  opcode(00) rs: 0 rt: 0 rd: 0 shamt: 0 funct(0)
[Execute] R[0]: 00000000 = R[0] << R[0]
----------------------------------------------------------------------
Cycle: 66
[Fetch]   28: 00621021
[Decode]  opcode(00) rs: 3 rt: 2 rd: 2 shamt: 0 funct(21)
[Execute] R[2]: 0000000a = R[3] + R[2]
----------------------------------------------------------------------
Cycle: 67
[Fetch]   2c: afc20000
[Decode]  opcode(2b) rs: 1e rt: 2 immediate: 0
[Execute] M[R[30] + 00000000]: 0000000a = R[2]
----------------------------------------------------------------------
Cycle: 68
[Fetch]   30: 8fc20004
[Decode]  opcode(23) rs: 1e rt: 2 immediate: 4
[Execute] R[2]: 00000004 = M[R[30] + 00000004]
----------------------------------------------------------------------
Cycle: 69
[Fetch]   34: 00000000
[Decode]  opcode(00) rs: 0 rt: 0 rd: 0 shamt: 0 funct(0)
[Execute] R[0]: 00000000 = R[0] << R[0]
----------------------------------------------------------------------
Cycle: 70
[Fetch]   38: 24420001
[Decode]  opcode(09) rs: 2 rt: 2 immediate: 1
[Execute] R[2]: 00000005 = R[2] + 00000001
----------------------------------------------------------------------
Cycle: 71
[Fetch]   3c: afc20004
[Decode]  opcode(2b) rs: 1e rt: 2 immediate: 4
[Execute] M[R[30] + 00000004]: 00000005 = R[2]
----------------------------------------------------------------------
Cycle: 72
[Fetch]   40: 8fc20004
[Decode]  opcode(23) rs: 1e rt: 2 immediate: 4
[Execute] R[2]: 00000005 = M[R[30] + 00000004]
----------------------------------------------------------------------
Cycle: 73
[Fetch]   44: 00000000
[Decode]  opcode(00) rs: 0 rt: 0 rd: 0 shamt: 0 funct(0)
[Execute] R[0]: 00000000 = R[0] << R[0]
----------------------------------------------------------------------
Cycle: 74
[Fetch]   48: 2842000a
[Decode]  opcode(0a) rs: 2 rt: 2 immediate: a
[Execute] R[2]: 1 = (R[2] < 0000000a)? 1 : 0
----------------------------------------------------------------------
Cycle: 75
[Fetch]   4c: 1440fff3
[Decode]  opcode(05) rs: 2 rt: 0 immediate: fff3
[Execute] Branch not equal X = R[2] == R[0]
----------------------------------------------------------------------
Cycle: 76
[Fetch]   1c: 8fc30000
[Decode]  opcode(23) rs: 1e rt: 3 immediate: 0
[Execute] R[3]: 0000000a = M[R[30] + 00000000]
----------------------------------------------------------------------
Cycle: 77
[Fetch]   20: 8fc20004
[Decode]  opcode(23) rs: 1e rt: 2 immediate: 4
[Execute] R[2]: 00000005 = M[R[30] + 00000004]
----------------------------------------------------------------------
Cycle: 78
[Fetch]   24: 00000000
[Decode]  opcode(00) rs: 0 rt: 0 rd: 0 shamt: 0 funct(0)
[Execute] R[0]: 00000000 = R[0] << R[0]
----------------------------------------------------------------------
Cycle: 79
[Fetch]   28: 00621021
[Decode]  opcode(00) rs: 3 rt: 2 rd: 2 shamt: 0 funct(21)
[Execute] R[2]: 0000000f = R[3] + R[2]
----------------------------------------------------------------------
Cycle: 80
[Fetch]   2c: afc20000
[Decode]  opcode(2b) rs: 1e rt: 2 immediate: 0
[Execute] M[R[30] + 00000000]: 0000000f = R[2]
----------------------------------------------------------------------
Cycle: 81
[Fetch]   30: 8fc20004
[Decode]  opcode(23) rs: 1e rt: 2 immediate: 4
[Execute] R[2]: 00000005 = M[R[30] + 00000004]
----------------------------------------------------------------------
Cycle: 82
[Fetch]   34: 00000000
[Decode]  opcode(00) rs: 0 rt: 0 rd: 0 shamt: 0 funct(0)
[Execute] R[0]: 00000000 = R[0] << R[0]
----------------------------------------------------------------------
Cycle: 83
[Fetch]   38: 24420001
[Decode]  opcode(09) rs: 2 rt: 2 immediate: 1
[Execute] R[2]: 00000006 = R[2] + 00000001
----------------------------------------------------------------------
Cycle: 84
[Fetch]   3c: afc20004
[Decode]  opcode(2b) rs: 1e rt: 2 immediate: 4
[Execute] M[R[30] + 00000004]: 00000006 = R[2]
----------------------------------------------------------------------
Cycle: 85
[Fetch]   40: 8fc20004
[Decode]  opcode(23) rs: 1e rt: 2 immediate: 4
[Execute] R[2]: 00000006 = M[R[30] + 00000004]
----------------------------------------------------------------------
Cycle: 86
[Fetch]   44: 00000000
[Decode]  opcode(00) rs: 0 rt: 0 rd: 0 shamt: 0 funct(0)
[Execute] R[0]: 00000000 = R[0] << R[0]
----------------------------------------------------------------------
Cycle: 87
[Fetch]   48: 2842000a
[Decode]  opcode(0a) rs: 2 rt: 2 immediate: a
[Execute] R[2]: 1 = (R[2] < 0000000a)? 1 : 0
----------------------------------------------------------------------
Cycle: 88
[Fetch]   4c: 1440fff3
[Decode]  opcode(05) rs: 2 rt: 0 immediate: fff3
[Execute] Branch not equal X = R[2] == R[0]
----------------------------------------------------------------------
Cycle: 89
[Fetch]   1c: 8fc30000
[Decode]  opcode(23) rs: 1e rt: 3 immediate: 0
[Execute] R[3]: 0000000f = M[R[30] + 00000000]
----------------------------------------------------------------------
Cycle: 90
[Fetch]   20: 8fc20004
[Decode]  opcode(23) rs: 1e rt: 2 immediate: 4
[Execute] R[2]: 00000006 = M[R[30] + 00000004]
----------------------------------------------------------------------
Cycle: 91
[Fetch]   24: 00000000
[Decode]  opcode(00) rs: 0 rt: 0 rd: 0 shamt: 0 funct(0)
[Execute] R[0]: 00000000 = R[0] << R[0]
----------------------------------------------------------------------
Cycle: 92
[Fetch]   28: 00621021
[Decode]  opcode(00) rs: 3 rt: 2 rd: 2 shamt: 0 funct(21)
[Execute] R[2]: 00000015 = R[3] + R[2]
----------------------------------------------------------------------
Cycle: 93
[Fetch]   2c: afc20000
[Decode]  opcode(2b) rs: 1e rt: 2 immediate: 0
[Execute] M[R[30] + 00000000]: 00000015 = R[2]
----------------------------------------------------------------------
Cycle: 94
[Fetch]   30: 8fc20004
[Decode]  opcode(23) rs: 1e rt: 2 immediate: 4
[Execute] R[2]: 00000006 = M[R[30] + 00000004]
----------------------------------------------------------------------
Cycle: 95
[Fetch]   34: 00000000
[Decode]  opcode(00) rs: 0 rt: 0 rd: 0 shamt: 0 funct(0)
[Execute] R[0]: 00000000 = R[0] << R[0]
----------------------------------------------------------------------
Cycle: 96
[Fetch]   38: 24420001
[Decode]  opcode(09) rs: 2 rt: 2 immediate: 1
[Execute] R[2]: 00000007 = R[2] + 00000001
----------------------------------------------------------------------
Cycle: 97
[Fetch]   3c: afc20004
[Decode]  opcode(2b) rs: 1e rt: 2 immediate: 4
[Execute] M[R[30] + 00000004]: 00000007 = R[2]
----------------------------------------------------------------------
Cycle: 98
[Fetch]   40: 8fc20004
[Decode]  opcode(23) rs: 1e rt: 2 immediate: 4
[Execute] R[2]: 00000007 = M[R[30] + 00000004]
----------------------------------------------------------------------
Cycle: 99
[Fetch]   44: 00000000
[Decode]  opcode(00) rs: 0 rt: 0 rd: 0 shamt: 0 funct(0)
[Execute] R[0]: 00000000 = R[0] << R[0]
----------------------------------------------------------------------
Cycle: 100
[Fetch]   48: 2842000a
[Decode]  opcode(0a) rs: 2 rt: 2 immediate: a
[Execute] R[2]: 1 = (R[2] < 0000000a)? 1 : 0
----------------------------------------------------------------------
Cycle: 101
[Fetch]   4c: 1440fff3
[Decode]  opcode(05) rs: 2 rt: 0 immediate: fff3
[Execute] Branch not equal X = R[2] == R[0]
----------------------------------------------------------------------
Cycle: 102
[Fetch]   1c: 8fc30000
[Decode]  opcode(23) rs: 1e rt: 3 immediate: 0
[Execute] R[3]: 00000015 = M[R[30] + 00000000]
----------------------------------------------------------------------
Cycle: 103
[Fetch]   20: 8fc20004
[Decode]  opcode(23) rs: 1e rt: 2 immediate: 4
[Execute] R[2]: 00000007 = M[R[30] + 00000004]
----------------------------------------------------------------------
Cycle: 104
[Fetch]   24: 00000000
[Decode]  opcode(00) rs: 0 rt: 0 rd: 0 shamt: 0 funct(0)
[Execute] R[0]: 00000000 = R[0] << R[0]
----------------------------------------------------------------------
Cycle: 105
[Fetch]   28: 00621021
[Decode]  opcode(00) rs: 3 rt: 2 rd: 2 shamt: 0 funct(21)
[Execute] R[2]: 0000001c = R[3] + R[2]
----------------------------------------------------------------------
Cycle: 106
[Fetch]   2c: afc20000
[Decode]  opcode(2b) rs: 1e rt: 2 immediate: 0
[Execute] M[R[30] + 00000000]: 0000001c = R[2]
----------------------------------------------------------------------
Cycle: 107
[Fetch]   30: 8fc20004
[Decode]  opcode(23) rs: 1e rt: 2 immediate: 4
[Execute] R[2]: 00000007 = M[R[30] + 00000004]
----------------------------------------------------------------------
Cycle: 108
[Fetch]   34: 00000000
[Decode]  opcode(00) rs: 0 rt: 0 rd: 0 shamt: 0 funct(0)
[Execute] R[0]: 00000000 = R[0] << R[0]
----------------------------------------------------------------------
Cycle: 109
[Fetch]   38: 24420001
[Decode]  opcode(09) rs: 2 rt: 2 immediate: 1
[Execute] R[2]: 00000008 = R[2] + 00000001
----------------------------------------------------------------------
Cycle: 110
[Fetch]   3c: afc20004
[Decode]  opcode(2b) rs: 1e rt: 2 immediate: 4
[Execute] M[R[30] + 00000004]: 00000008 = R[2]
----------------------------------------------------------------------
Cycle: 111
[Fetch]   40: 8fc20004
[Decode]  opcode(23) rs: 1e rt: 2 immediate: 4
[Execute] R[2]: 00000008 = M[R[30] + 00000004]
----------------------------------------------------------------------
Cycle: 112
[Fetch]   44: 00000000
[Decode]  opcode(00) rs: 0 rt: 0 rd: 0 shamt: 0 funct(0)
[Execute] R[0]: 00000000 = R[0] << R[0]
----------------------------------------------------------------------
Cycle: 113
[Fetch]   48: 2842000a
[Decode]  opcode(0a) rs: 2 rt: 2 immediate: a
[Execute] R[2]: 1 = (R[2] < 0000000a)? 1 : 0
----------------------------------------------------------------------
Cycle: 114
[Fetch]   4c: 1440fff3
[Decode]  opcode(05) rs: 2 rt: 0 immediate: fff3
[Execute] Branch not equal X = R[2] == R[0]
----------------------------------------------------------------------
Cycle: 115
[Fetch]   1c: 8fc30000
[Decode]  opcode(23) rs: 1e rt: 3 immediate: 0
[Execute] R[3]: 0000001c = M[R[30] + 00000000]
----------------------------------------------------------------------
Cycle: 116
[Fetch]   20: 8fc20004
[Decode]  opcode(23) rs: 1e rt: 2 immediate: 4
[Execute] R[2]: 00000008 = M[R[30] + 00000004]
----------------------------------------------------------------------
Cycle: 117
[Fetch]   24: 00000000
[Decode]  opcode(00) rs: 0 rt: 0 rd: 0 shamt: 0 funct(0)
[Execute] R[0]: 00000000 = R[0] << R[0]
----------------------------------------------------------------------
Cycle: 118
[Fetch]   28: 00621021
[Decode]  opcode(00) rs: 3 rt: 2 rd: 2 shamt: 0 funct(21)
[Execute] R[2]: 00000024 = R[3] + R[2]
----------------------------------------------------------------------
Cycle: 119
[Fetch]   2c: afc20000
[Decode]  opcode(2b) rs: 1e rt: 2 immediate: 0
[Execute] M[R[30] + 00000000]: 00000024 = R[2]
----------------------------------------------------------------------
Cycle: 120
[Fetch]   30: 8fc20004
[Decode]  opcode(23) rs: 1e rt: 2 immediate: 4
[Execute] R[2]: 00000008 = M[R[30] + 00000004]
----------------------------------------------------------------------
Cycle: 121
[Fetch]   34: 00000000
[Decode]  opcode(00) rs: 0 rt: 0 rd: 0 shamt: 0 funct(0)
[Execute] R[0]: 00000000 = R[0] << R[0]
----------------------------------------------------------------------
Cycle: 122
[Fetch]   38: 24420001
[Decode]  opcode(09) rs: 2 rt: 2 immediate: 1
[Execute] R[2]: 00000009 = R[2] + 00000001
----------------------------------------------------------------------
Cycle: 123
[Fetch]   3c: afc20004
[Decode]  opcode(2b) rs: 1e rt: 2 immediate: 4
[Execute] M[R[30] + 00000004]: 00000009 = R[2]
----------------------------------------------------------------------
Cycle: 124
[Fetch]   40: 8fc20004
[Decode]  opcode(23) rs: 1e rt: 2 immediate: 4
[Execute] R[2]: 00000009 = M[R[30] + 00000004]
----------------------------------------------------------------------
Cycle: 125
[Fetch]   44: 00000000
[Decode]  opcode(00) rs: 0 rt: 0 rd: 0 shamt: 0 funct(0)
[Execute] R[0]: 00000000 = R[0] << R[0]
----------------------------------------------------------------------
Cycle: 126
[Fetch]   48: 2842000a
[Decode]  opcode(0a) rs: 2 rt: 2 immediate: a
[Execute] R[2]: 1 = (R[2] < 0000000a)? 1 : 0
----------------------------------------------------------------------
Cycle: 127
[Fetch]   4c: 1440fff3
[Decode]  opcode(05) rs: 2 rt: 0 immediate: fff3
[Execute] Branch not equal X = R[2] == R[0]
----------------------------------------------------------------------
Cycle: 128
[Fetch]   1c: 8fc30000
[Decode]  opcode(23) rs: 1e rt: 3 immediate: 0
[Execute] R[3]: 00000024 = M[R[30] + 00000000]
----------------------------------------------------------------------
Cycle: 129
[Fetch]   20: 8fc20004
[Decode]  opcode(23) rs: 1e rt: 2 immediate: 4
[Execute] R[2]: 00000009 = M[R[30] + 00000004]
----------------------------------------------------------------------
Cycle: 130
[Fetch]   24: 00000000
[Decode]  opcode(00) rs: 0 rt: 0 rd: 0 shamt: 0 funct(0)
[Execute] R[0]: 00000000 = R[0] << R[0]
----------------------------------------------------------------------
Cycle: 131
[Fetch]   28: 00621021
[Decode]  opcode(00) rs: 3 rt: 2 rd: 2 shamt: 0 funct(21)
[Execute] R[2]: 0000002d = R[3] + R[2]
----------------------------------------------------------------------
Cycle: 132
[Fetch]   2c: afc20000
[Decode]  opcode(2b) rs: 1e rt: 2 immediate: 0
[Execute] M[R[30] + 00000000]: 0000002d = R[2]
----------------------------------------------------------------------
Cycle: 133
[Fetch]   30: 8fc20004
[Decode]  opcode(23) rs: 1e rt: 2 immediate: 4
[Execute] R[2]: 00000009 = M[R[30] + 00000004]
----------------------------------------------------------------------
Cycle: 134
[Fetch]   34: 00000000
[Decode]  opcode(00) rs: 0 rt: 0 rd: 0 shamt: 0 funct(0)
[Execute] R[0]: 00000000 = R[0] << R[0]
----------------------------------------------------------------------
Cycle: 135
[Fetch]   38: 24420001
[Decode]  opcode(09) rs: 2 rt: 2 immediate: 1
[Execute] R[2]: 0000000a = R[2] + 00000001
----------------------------------------------------------------------
Cycle: 136
[Fetch]   3c: afc20004
[Decode]  opcode(2b) rs: 1e rt: 2 immediate: 4
[Execute] M[R[30] + 00000004]: 0000000a = R[2]
----------------------------------------------------------------------
Cycle: 137
[Fetch]   40: 8fc20004
[Decode]  opcode(23) rs: 1e rt: 2 immediate: 4
[Execute] R[2]: 0000000a = M[R[30] + 00000004]
----------------------------------------------------------------------
Cycle: 138
[Fetch]   44: 00000000
[Decode]  opcode(00) rs: 0 rt: 0 rd: 0 shamt: 0 funct(0)
[Execute] R[0]: 00000000 = R[0] << R[0]
----------------------------------------------------------------------
Cycle: 139
[Fetch]   48: 2842000a
[Decode]  opcode(0a) rs: 2 rt: 2 immediate: a
[Execute] R[2]: 0 = (R[2] < 0000000a)? 1 : 0
----------------------------------------------------------------------
Cycle: 140
[Fetch]   4c: 1440fff3
[Decode]  opcode(05) rs: 2 rt: 0 immediate: fff3
[Execute] Jump to  00000050 = R[2] != R[0]
----------------------------------------------------------------------
Cycle: 141
[Fetch]   50: 00000000
[Decode]  opcode(00) rs: 0 rt: 0 rd: 0 shamt: 0 funct(0)
[Execute] R[0]: 00000000 = R[0] << R[0]
----------------------------------------------------------------------
Cycle: 142
[Fetch]   54: 8fc20000
[Decode]  opcode(23) rs: 1e rt: 2 immediate: 0
[Execute] R[2]: 0000002d = M[R[30] + 00000000]
----------------------------------------------------------------------
Cycle: 143
[Fetch]   58: 03c0e825
[Decode]  opcode(00) rs: 1e rt: 1d rd: 0 shamt: 0 funct(25)
[Execute] R[29]: 00fffff0 = R[30] | R[0]
----------------------------------------------------------------------
Cycle: 144
[Fetch]   5c: 8fbe000c
[Decode]  opcode(23) rs: 1d rt: 1e immediate: c
[Execute] R[30]: 00000000 = M[R[29] + 0000000c]
----------------------------------------------------------------------
Cycle: 145
[Fetch]   60: 27bd0010
[Decode]  opcode(09) rs: 1d rt: 1d immediate: 10
[Execute] R[29]: 01000000 = R[29] + 00000010
----------------------------------------------------------------------
Cycle: 146
[Fetch]   64: 03e00008
[Decode]  opcode(00) rs: 1f rt: 0 rd: 0 shamt: 0 funct(8)
[Execute] PC: ffffffff = R[31]

******************result*********************
(1) Final return value: 45
(2) Number of executed instruction: 146
(3) Number of executed R type instruction: 13
(4) Number of executed I type instruction: 101
(5) Number of executed J type instruction: 0
(6) Number of executed memory access instruction: 66
(7) Number of executed taken branches instruction: 12
*********************************************
